[{"C:\\coding\\typing-contest\\frontend\\src\\index.js":"1","C:\\coding\\typing-contest\\frontend\\src\\reportWebVitals.js":"2","C:\\coding\\typing-contest\\frontend\\src\\App.js":"3","C:\\coding\\typing-contest\\frontend\\src\\navigation\\header.js":"4","C:\\coding\\typing-contest\\frontend\\src\\homescreen\\homescreen.js":"5","C:\\coding\\typing-contest\\frontend\\src\\profile\\profilePage.js":"6","C:\\coding\\typing-contest\\frontend\\src\\auth\\auth.js":"7","C:\\coding\\typing-contest\\frontend\\src\\practicePage\\practicePage.js":"8","C:\\coding\\typing-contest\\frontend\\src\\contest\\inputField.js":"9","C:\\coding\\typing-contest\\frontend\\src\\contest\\textBox.js":"10","C:\\coding\\typing-contest\\frontend\\src\\contest\\startLight.js":"11","C:\\coding\\typing-contest\\frontend\\src\\auth\\CreateAccount.js":"12","C:\\coding\\typing-contest\\frontend\\src\\multiplayer\\multiplayerRace.js":"13","C:\\coding\\typing-contest\\frontend\\src\\multiplayer\\Street.js":"14","C:\\coding\\typing-contest\\frontend\\src\\multiplayer\\createGame.js":"15","C:\\coding\\typing-contest\\frontend\\src\\socket.js":"16","C:\\coding\\typing-contest\\frontend\\src\\context\\auth-context.js":"17","C:\\coding\\typing-contest\\frontend\\src\\auth\\logout.js":"18","C:\\coding\\typing-contest\\frontend\\src\\multiplayer\\JoinGame.js":"19","C:\\coding\\typing-contest\\frontend\\src\\auth\\Logout.js":"20"},{"size":502,"mtime":1610162088550,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":2294,"mtime":1610414963648,"results":"24","hashOfConfig":"22"},{"size":1888,"mtime":1610409607844,"results":"25","hashOfConfig":"22"},{"size":888,"mtime":1609908075666,"results":"26","hashOfConfig":"22"},{"size":2687,"mtime":1610409652430,"results":"27","hashOfConfig":"22"},{"size":2024,"mtime":1610409670264,"results":"28","hashOfConfig":"22"},{"size":2513,"mtime":1610409636212,"results":"29","hashOfConfig":"22"},{"size":2109,"mtime":1610406537957,"results":"30","hashOfConfig":"22"},{"size":2168,"mtime":1610406559639,"results":"31","hashOfConfig":"22"},{"size":479,"mtime":1609924637873,"results":"32","hashOfConfig":"22"},{"size":2731,"mtime":1610409448895,"results":"33","hashOfConfig":"22"},{"size":4338,"mtime":1610415347519,"results":"34","hashOfConfig":"22"},{"size":427,"mtime":1610183381156,"results":"35","hashOfConfig":"22"},{"size":910,"mtime":1610415031650,"results":"36","hashOfConfig":"22"},{"size":426,"mtime":1610409384665,"results":"37","hashOfConfig":"22"},{"size":211,"mtime":1610262562064,"results":"38","hashOfConfig":"22"},{"size":1218,"mtime":1610390676057,"results":"39","hashOfConfig":"40"},{"size":1288,"mtime":1610409481614,"results":"41","hashOfConfig":"22"},{"size":1248,"mtime":1610409616056,"results":"42","hashOfConfig":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1pvad4u",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"45"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"la064o",{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"45"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"C:\\coding\\typing-contest\\frontend\\src\\index.js",[],["94","95"],"C:\\coding\\typing-contest\\frontend\\src\\reportWebVitals.js",[],"C:\\coding\\typing-contest\\frontend\\src\\App.js",["96"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./navigation/header\";\nimport HomeScreen from \"./homescreen/homescreen\";\nimport ProfilePage from \"./profile/profilePage\";\nimport practicePage from \"./practicePage/practicePage\";\nimport Auth from \"./auth/auth\";\nimport CreateAccountPage from \"./auth/CreateAccount\";\nimport MultiPlayerPage from \"./multiplayer/multiplayerRace\";\nimport CreateGame from \"./multiplayer/createGame\";\nimport { AuthContext } from \"./context/auth-context\";\nimport Logout from './auth/Logout'\nimport JoinGame from './multiplayer/JoinGame'\nimport \"./App.css\";\n\nfunction App() {\n  let [userId, setUserId] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState('');\n\n  const login = useCallback(() => {\n    setIsLoggedIn(true);\n  }, []);\n\n  const logout = useCallback(() => {\n    setIsLoggedIn(false);\n\n  }, []);\n\n  const setClientId = useCallback(id => {\n    setUserId(id);\n  }, []);\n\n  const setUserName = useCallback(username => {\n    setUser(username)\n  }, [])\n  \n\n\n  return (\n    <AuthContext.Provider\n      value={{isLoggedIn: isLoggedIn, login: login, logout: logout, clientId: userId, setClientId: setClientId, username: user, setUsername: setUserName}}\n    >\n      <BrowserRouter>\n        <header>\n          <Header isLoggedIn={isLoggedIn} />\n        </header>\n        <main>\n          <Switch>\n            <Route path=\"/\" exact component={HomeScreen} />\n            <Route path=\"/profile/:userId\" component={ProfilePage} />\n            <Route path=\"/practice\" component={practicePage} />\n            <Route path=\"/auth\" component={Auth} />\n            <Route path=\"/create-account\" component={CreateAccountPage} />\n            <Route path=\"/game/:gameId\" component={MultiPlayerPage} />\n            <Route path=\"/join-game/:gameId\" component={JoinGame} />\n            <Route\n              path=\"/create-game\"\n              render={() => <CreateGame userId={userId} username=\"Damian\" />}\n            />\n            <Route path=\"/logout\" component={Logout} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </main>\n      </BrowserRouter>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\coding\\typing-contest\\frontend\\src\\navigation\\header.js",["97"],"import React, {useContext, useEffect} from \"react\";\r\nimport axios from 'axios'\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport \"./header.css\";\r\nimport Logo from \"../logo.png\";\r\nimport {AuthContext} from '../context/auth-context'\r\n\r\nconst getRanHex = () => {\r\n  let result = [];\r\n  let hexRef = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\r\n\r\n  for (let n = 0; n < 24; n++) {\r\n    result.push(hexRef[Math.floor(Math.random() * 16)]);\r\n  }\r\n  return result.join('');\r\n}\r\n\r\nconst Header = (props) => {\r\n  const auth = useContext(AuthContext)\r\n\r\n  // check if we are already logged in through cookie\r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_BACKEND_URL}/verify`, {withCredentials: true}).then(res => {\r\n      if (res.data.userId === null){\r\n        const userId = getRanHex()\r\n        auth.logout();\r\n        auth.setClientId(userId)\r\n        auth.setUsername(`Guest ${Math.floor(Math.random() * (999 - 1 + 1)) + 1}`)\r\n      } else {\r\n        auth.login()\r\n        auth.setClientId(res.data.userId)\r\n        auth.setUsername(res.data.username)\r\n      }\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"main-header\">\r\n      <NavLink to=\"/\">\r\n        <img src={Logo} alt=\"Logo\" onClick={() => Redirect('/')} />\r\n        <h1 className='logo-name'>CodeRacer</h1>\r\n      </NavLink>\r\n\r\n      {auth.isLoggedIn ? (\r\n        <div className='profile-logout'>\r\n        <NavLink className=\"profile-button\" to={{pathname: `/profile/${props.userId}`}}>\r\n          Profile\r\n        </NavLink>\r\n        <NavLink className=\"logout-button\" to=\"/logout\">\r\n          Logout\r\n        </NavLink>\r\n        </div>\r\n      ) : (\r\n        <NavLink className=\"login-button\" to=\"/auth\">\r\n          Login/Signup\r\n        </NavLink>\r\n      )}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\coding\\typing-contest\\frontend\\src\\homescreen\\homescreen.js",["98"],"import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport singlePlayerPhoto from \"../single-player.png\";\r\nimport multiPlayerPhoto from \"../multi-player.svg\";\r\nimport \"./homescreen.css\";\r\n\r\nconst homeScreen = (props) => {\r\n    const gameId = 'fsdjlkaf'\r\n  return (\r\n    <div className=\"homescreen\">\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <img src={multiPlayerPhoto} alt=\"MultiPlayer\" />\r\n            </td>\r\n            <td>\r\n              <Link to='/create-game'>MultiPlayer</Link>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <img src={singlePlayerPhoto} alt=\"Practice\" />\r\n            </td>\r\n            <td>\r\n              <Link to=\"/practice\">Practice</Link>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default homeScreen;\r\n","C:\\coding\\typing-contest\\frontend\\src\\profile\\profilePage.js",["99"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../context/auth-context\";\r\nimport \"./profilePage.css\";\r\n\r\nconst ProfilePage = (props) => {\r\n  const [data, setData] = useState({timeTyped: 3670});\r\n  const auth = useContext(AuthContext);\r\n  const [time, setTime] = useState({hours: 0, minutes: 0, seconds: 0})\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_BACKEND_URL}/get-profile`, {withCredentials: true})\r\n      .then((res) => {\r\n        const hours = Math.floor(res.data.timeTyped/3600)\r\n        let timeLeft = res.data.timeTyped - (hours*3600)\r\n        const minutes = Math.floor(timeLeft/60)\r\n        const seconds = timeLeft - (minutes*60)\r\n        setTime({totalSeconds: res.data.timeTyped, hours: hours, minutes: minutes, seconds: seconds})\r\n        setData({\r\n          username: auth.username,\r\n          wordsTyped: res.data.wordsTyped,\r\n          racesPlayed: res.data.racesPlayed,\r\n          functionsTyped: res.data.functionsTyped,\r\n          classesTyped: res.data.classesTyped\r\n        });\r\n      })\r\n      .catch();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"profile-card\">\r\n      <h1>{data.username}</h1>\r\n      <h1>Stats</h1>\r\n      <div className=\"stats\">\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <p>Words Typed:</p>\r\n              </td>\r\n              <td>\r\n                <p>{data.wordsTyped}</p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Time Typed:</p>\r\n              </td>\r\n              <td>\r\n                <p>{time.hours}h {time.minutes}m {time.seconds}s</p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Average WPM:</p>\r\n              </td>\r\n              <td>\r\n                <p>{Math.floor(60 * data.wordsTyped / time.totalSeconds)} WPM</p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Races Played:</p>\r\n              </td>\r\n              <td>\r\n                <p>{data.racesPlayed}</p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Functions Typed:</p>\r\n              </td>\r\n              <td>\r\n                <p>{data.functionsTyped}</p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Classes Typed:</p>\r\n              </td>\r\n              <td>\r\n                <p>{data.classesTyped}</p>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","C:\\coding\\typing-contest\\frontend\\src\\auth\\auth.js",[],"C:\\coding\\typing-contest\\frontend\\src\\practicePage\\practicePage.js",["100","101"],"import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport \"./practicePage.css\";\r\nimport InputField from \"../contest/inputField\";\r\nimport TextBox from \"../contest/textBox\";\r\nimport StartLight from \"../contest/startLight\";\r\nimport io from \"../socket\";\r\nimport axios from \"axios\";\r\n\r\nconst sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nconst PracticePage = (props) => {\r\n  const setUserInputHandler = (newAddition) => {\r\n    if (newAddition === \"backspace\") {\r\n      setUserInput((prevState) => prevState.slice(0, -1));\r\n    } else {\r\n      setUserInput((prevState) => prevState + newAddition);\r\n    }\r\n  };\r\n\r\n  const [phrase, setPhrase] = useState(\"Loading\");\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [speed, setSpeed] = useState(0);\r\n  const [time, setTime] = useState(5);\r\n  const [timeTyping, setTimeTyping] = useState(0);\r\n  const [dataInterval, setDataInterval] = useState(0);\r\n  const userInputRef = useRef(userInput);\r\n  userInputRef.current = userInput;\r\n  const timeTypingRef = useRef(timeTyping);\r\n  timeTypingRef.current = timeTyping;\r\n\r\n  let gameDataID;\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_BACKEND_URL}/get-phrase`, { withCredentials: true })\r\n      .then((res) => {\r\n        setPhrase(res.data.phrase);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    return () => {\r\n      clearInterval(gameDataID);\r\n    };\r\n  }, []);\r\n\r\n  const startGameHandler = async () => {\r\n    setStartButton(null);\r\n    for (let i = 0; i < 6; i++) {\r\n      setTimeout(() => {\r\n        setTime((prevState) => 5 - i);\r\n      }, i * 1000);\r\n    }\r\n    await sleep(5000)\r\n    setDataInterval(setInterval(() => {\r\n      setTimeTyping(timeTypingRef.current + 1);\r\n      setSpeed(Math.floor((60 * (userInputRef.current.length / 5)) / timeTypingRef.current));\r\n    }, 1000));\r\n  };\r\n  if (userInput === phrase.replace(/@/ig, '')){\r\n    clearInterval(dataInterval)\r\n  }\r\n\r\n  const [startButton, setStartButton] = useState(\r\n    <div className=\"start-button\">\r\n      <button onClick={() => startGameHandler()}>Start Race</button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <StartLight time={time.toString()} />\r\n      <TextBox userInput={userInput}>{phrase}</TextBox>\r\n      <InputField\r\n        onChange={(newAddition) => setUserInputHandler(newAddition)}\r\n        phrase={phrase}\r\n        time={time}\r\n      ></InputField>\r\n      <h1>{speed} WPM</h1>\r\n      {startButton}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PracticePage;\r\n","C:\\coding\\typing-contest\\frontend\\src\\contest\\inputField.js",["102","103","104"],"import React, {useState, useEffect} from 'react'\r\n\r\nimport './inputField.css'\r\n\r\nconst InputField = props => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const [fullUserInput, setFullUserInput] = useState('')\r\n    const [warning, setWarning] = useState(false)\r\n\r\n    let phrase = props.phrase.replace(/@/ig, '')\r\n\r\n    const typeEarly = e => {\r\n        setWarning(true)\r\n        setTimeout(() => {\r\n            setWarning(false)\r\n        }, 5000)\r\n    }\r\n\r\n\r\n    const onEnterKey = e => {\r\n        if (e.key === 'Capslock' || e.key === 'Tab' || e.key === 'Shift' || e.key === 'Control'){\r\n        } else if (e.key === 'Enter' && (fullUserInput+'~' == phrase.slice(0, fullUserInput.length+1))){\r\n            setFullUserInput(prevState => prevState+'~')\r\n            setInputValue('')\r\n            props.onChange('~')\r\n        } else if ((e.key === ' ') && (fullUserInput+e.key == phrase.slice(0, fullUserInput.length+1))){\r\n            setFullUserInput(prevState => prevState + e.key)\r\n            props.onChange(e.key)\r\n            setInputValue('')\r\n        } else if (e.key === 'Backspace' && inputValue !== ''){\r\n            setFullUserInput(prevState => prevState.slice(0, -1))\r\n            setInputValue(prevState => prevState.slice(0, -1))\r\n            props.onChange('backspace')\r\n        }else if (e.key !== 'Enter' && e.key !== 'Backspace'){\r\n            setFullUserInput(prevState => prevState + e.key)\r\n            setInputValue(prevState => prevState + e.key)\r\n            props.onChange(e.key)\r\n        }\r\n    }\r\n\r\n    const placebo = e => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    let warningScreen = warning && props.time > 0 ? <h1>Please wait for the countdown to finish</h1> : null\r\n\r\n    let finished = phrase === fullUserInput ? <h1 className='finish-label'>You Finished!</h1> : null\r\n\r\n    return (\r\n        <div className='input-field'>\r\n        {finished}\r\n        <input onChange={placebo} onKeyDown={props.time ? typeEarly : onEnterKey} value={props.time ? '' : inputValue}/>\r\n        {warningScreen}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default InputField","C:\\coding\\typing-contest\\frontend\\src\\contest\\textBox.js",["105"],"import React, { useEffect } from \"react\";\r\n\r\nimport \"./textBox.css\";\r\n\r\n// const textBox = (props) => {\r\n//     return props.userInput.join('') === props.children.join('') ? <h1 style={{display: 'block'}}>You finished!</h1> : (<div className='text-box'>\r\n//         {props.children.map((letter, index) => {\r\n//           if (letter === ' ' && props.userInput[index] !== ' ' && props.userInput[index] !== undefined){\r\n//               return <h1 key={index} style={{ color: \"red\" }}>{props.userInput[index]}</h1>;\r\n//           }\r\n//           else if (props.userInput[index] === undefined) {\r\n//             return <h1 key={index} style={{ color: \"black\" }}>{letter}</h1>;\r\n//           } else {\r\n//           const correct = letter === props.userInput[index]\r\n//           return <h1 key={index} style={{ color: correct ? \"green\" : \"red\", borderBottom: correct ? '2px solid black': null}}>{letter}</h1>;\r\n//           }\r\n//         })}\r\n//       </div>)\r\n\r\n// };\r\n\r\nconst TextBox = (props) => {\r\n  let phraseWithoutTabs = props.children.replace(/@/g, '')\r\n  let numTabs = 0;\r\n  let phrase = props.children\r\n  return (\r\n    <div className=\"text-box\">\r\n      {phrase.split(\"\").map((letter, index) => {\r\n        let color = 'black'\r\n        if (letter === \"@\") {\r\n          numTabs += 1;\r\n          return null\r\n        } if (props.userInput[index - numTabs] !== undefined){\r\n          color = phraseWithoutTabs[index - numTabs] === props.userInput[index - numTabs] ? 'blue' : 'red'\r\n        } if (letter === '~'){\r\n          return <br key={index}/>\r\n        }  if (phrase[index - 1] === \" \") {\r\n          return <h1 key={index} style={{ marginLeft: \"5px\", color: color }}>{letter}</h1>;\r\n        } if (\r\n          phrase[index - 1] === \"@\" &&\r\n          phrase[index - 2] === \"@\"\r\n        ) {\r\n          return <h1 key={index} style={{ marginLeft: \"60px\", color: color }}>{letter}</h1>;\r\n        } if (phrase[index - 1] === \"@\") {\r\n          return <h1 key={index} style={{ marginLeft: \"30px\", color: color }}>{letter}</h1>;\r\n        } \r\n        return <h1 key={index} style={{color: color}}>{letter}</h1>;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextBox;\r\n","C:\\coding\\typing-contest\\frontend\\src\\contest\\startLight.js",[],"C:\\coding\\typing-contest\\frontend\\src\\auth\\CreateAccount.js",[],"C:\\coding\\typing-contest\\frontend\\src\\multiplayer\\multiplayerRace.js",["106","107"],"C:\\coding\\typing-contest\\frontend\\src\\multiplayer\\Street.js",[],["108","109"],"C:\\coding\\typing-contest\\frontend\\src\\multiplayer\\createGame.js",["110"],"import React, { useState, useEffect, useContext} from \"react\";\r\n\r\nimport io from '../socket'\r\nimport {AuthContext} from '../context/auth-context'\r\nimport './createGame.css'\r\nimport { Redirect} from \"react-router-dom\";\r\n\r\nconst CreateGame = props => {\r\n  const auth = useContext(AuthContext)\r\n  const [redirect, setRedirect] = useState(null);\r\n  \r\n\r\n  useEffect(() => {\r\n    const socket = io.init(process.env.REACT_APP_BACKEND_URL)\r\n    socket.emit('create-game', {userId: auth.clientId, username: auth.username})\r\n    socket.on(\"gameId-phrase\", (arg) => {\r\n        setRedirect(<Redirect to={{pathname: `/game/${arg.gameId}`, state: {host: true, userId: auth.clientId, phrase: arg.phrase }}}/>)\r\n      })\r\n  }, [auth.username])\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n        {redirect}\r\n      <h1>Creating Game</h1>\r\n      <div className=\"loader\">Loading...</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateGame;\r\n","C:\\coding\\typing-contest\\frontend\\src\\socket.js",[],"C:\\coding\\typing-contest\\frontend\\src\\context\\auth-context.js",[],"C:\\coding\\typing-contest\\frontend\\src\\auth\\logout.js",[],"C:\\coding\\typing-contest\\frontend\\src\\multiplayer\\JoinGame.js",["111"],"import React, {useState, useEffect, useContext} from \"react\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport io from '../socket'\r\nimport {AuthContext} from '../context/auth-context'\r\n\r\nconst initializeSocket = () => {\r\n    return io.init(process.env.REACT_APP_BACKEND_URL)\r\n}\r\n\r\nconst JoinGame = (props) => {\r\n    const auth = useContext(AuthContext)\r\n\r\n    const [redirect, setRedirect] = useState(null);\r\n  \r\n\r\n    useEffect(() => {\r\n        // give header a chance to set everything up\r\n      if (auth.clientId){\r\n        const socket = initializeSocket()\r\n        let username = auth.username\r\n        let userId = auth.clientId\r\n        socket.emit('join-game', {gameId: props.match.params.gameId, username: username, userId: userId})\r\n        // consider generating the random clientId and username here \r\n       \r\n        socket.on(\"phrase\", (arg) => {\r\n            setRedirect(<Redirect to={{pathname: `/game/${props.match.params.gameId}`, state: {host: false, userId: userId, phrase: arg.phrase }}}/>)\r\n          })\r\n      } else {\r\n          return;\r\n      }\r\n      \r\n    }, [auth.username])\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {redirect}\r\n      <h1>Joining Game</h1>\r\n      <div className=\"loader\">Loading...</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JoinGame;\r\n","C:\\coding\\typing-contest\\frontend\\src\\auth\\Logout.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":1,"column":40,"nodeType":"118","messageId":"119","endLine":1,"endColumn":49},{"ruleId":"120","severity":1,"message":"121","line":37,"column":6,"nodeType":"122","endLine":37,"endColumn":8,"suggestions":"123"},{"ruleId":"116","severity":1,"message":"124","line":9,"column":11,"nodeType":"118","messageId":"119","endLine":9,"endColumn":17},{"ruleId":"120","severity":1,"message":"125","line":28,"column":6,"nodeType":"122","endLine":28,"endColumn":8,"suggestions":"126"},{"ruleId":"116","severity":1,"message":"127","line":7,"column":8,"nodeType":"118","messageId":"119","endLine":7,"endColumn":10},{"ruleId":"120","severity":1,"message":"128","line":44,"column":6,"nodeType":"122","endLine":44,"endColumn":8,"suggestions":"129"},{"ruleId":"116","severity":1,"message":"117","line":1,"column":26,"nodeType":"118","messageId":"119","endLine":1,"endColumn":35},{"ruleId":"130","severity":1,"message":"131","line":23,"column":60,"nodeType":"132","messageId":"133","endLine":23,"endColumn":62},{"ruleId":"130","severity":1,"message":"131","line":27,"column":60,"nodeType":"132","messageId":"133","endLine":27,"endColumn":62},{"ruleId":"116","severity":1,"message":"117","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"116","severity":1,"message":"134","line":5,"column":3,"nodeType":"118","messageId":"119","endLine":5,"endColumn":14},{"ruleId":"120","severity":1,"message":"135","line":89,"column":6,"nodeType":"122","endLine":89,"endColumn":8,"suggestions":"136"},{"ruleId":"112","replacedBy":"137"},{"ruleId":"114","replacedBy":"138"},{"ruleId":"120","severity":1,"message":"139","line":19,"column":6,"nodeType":"122","endLine":19,"endColumn":21,"suggestions":"140"},{"ruleId":"120","severity":1,"message":"141","line":34,"column":8,"nodeType":"122","endLine":34,"endColumn":23,"suggestions":"142"},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["145"],"'gameId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'auth.username'. Either include it or remove the dependency array.",["146"],"'io' is defined but never used.","React Hook useEffect has a missing dependency: 'gameDataID'. Either include it or remove the dependency array.",["147"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useCallback' is defined but never used.","React Hook useEffect has missing dependencies: 'auth.clientId', 'auth.isLoggedIn', 'auth.username', 'gameId', 'props.location.state.host', 'props.location.state.phrase', and 'startGameHandler'. Either include them or remove the dependency array.",["148"],["143"],["144"],"React Hook useEffect has a missing dependency: 'auth.clientId'. Either include it or remove the dependency array.",["149"],"React Hook useEffect has missing dependencies: 'auth.clientId' and 'props.match.params.gameId'. Either include them or remove the dependency array. If 'setRedirect' needs the current value of 'props.match.params.gameId', you can also switch to useReducer instead of useState and read 'props.match.params.gameId' in the reducer.",["150"],"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [auth]",{"range":"163","text":"164"},"Update the dependencies array to be: [auth.username]",{"range":"165","text":"166"},"Update the dependencies array to be: [gameDataID]",{"range":"167","text":"168"},"Update the dependencies array to be: [auth.clientId, auth.isLoggedIn, auth.username, gameId, props.location.state.host, props.location.state.phrase, startGameHandler]",{"range":"169","text":"170"},"Update the dependencies array to be: [auth.clientId, auth.username]",{"range":"171","text":"172"},"Update the dependencies array to be: [auth.clientId, auth.username, props.match.params.gameId]",{"range":"173","text":"174"},[1182,1184],"[auth]",[1135,1137],"[auth.username]",[1426,1428],"[gameDataID]",[2761,2763],"[auth.clientId, auth.isLoggedIn, auth.username, gameId, props.location.state.host, props.location.state.phrase, startGameHandler]",[711,726],"[auth.clientId, auth.username]",[1096,1111],"[auth.clientId, auth.username, props.match.params.gameId]"]